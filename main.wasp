app MyPlants {
  wasp: {
    version: "^0.13.0"
  },
  title: "MyPlants",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id      Int     @id @default(autoincrement())
    links   Link[]
    isAdmin Boolean @default(false)
psl=}

entity Link {=psl
    id         Int      @id @default(autoincrement())
    url        String
    photo      String
    rating     Float    @default(0)
    user       User     @relation(fields: [userId], references: [id])
    userId     Int
    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int
psl=}

entity Category {=psl
    id    Int    @id @default(autoincrement())
    name  String
    links Link[]
psl=}

action createLink {
  fn: import { createLink } from "@src/actions.js",
  entities: [User, Link, Category]
}

action updateLink {
  fn: import { updateLink } from "@src/actions.js",
  entities: [User, Link, Category]
}

action deleteLink {
  fn: import { deleteLink } from "@src/actions.js",
  entities: [User, Link]
}

query getLinks {
  fn: import { getLinks } from "@src/queries.js",
  entities: [User, Link, Category]
}

query getLink {
  fn: import { getLink } from "@src/queries.js",
  entities: [User, Link]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: false
}

route CategoryRoute { path: "/category/:categoryId", to: CategoryPage }
page CategoryPage {
  component: import CategoryPage from "@src/pages/Category.jsx",
  authRequired: true
}

route AdminRoute { path: "/admin", to: AdminPage }
page AdminPage {
  component: import AdminPage from "@src/pages/Admin.jsx",
  authRequired: true
}